---
title: Installing PCF on Microsoft Azure
owner: Partners
---

 <p class="note"><strong>Note</strong>: This document describes how to install a basic, opinionated Pivotal Cloud Foundry (PCF) on Azure using the Azure Marketplace. To install a more robust PCF 1.8 deployment on Azure for development or production, see the <a href="azure.html">Installing Pivotal Cloud Foundry on Azure</a> topic.</p>

This topic describes how to deploy Pivotal Cloud Foundry (PCF) on Microsoft Azure.

PCF on Microsoft Azure is available as an offering in [Azure Marketplace](https://azure.microsoft.com/en-us/marketplace/partners/pivotal/pivotal-cloud-foundryazure-pcf/). The Azure Marketplace offering installs a pre-configured deployment of PCF.

##<a id='components'></a>Components ##

PCF on Microsoft Azure includes the following components:

* [Elastic Runtime](../installing/pcf-docs.html)
* [Microsoft Azure Service Broker](http://network.pivotal.io)

Optional (Coming Soon):
* [RabbitMQ for PCF](http://docs.pivotal.io/rabbitmq-cf/index.html)
* [MySQL for PCF](http://docs.pivotal.io/p-mysql/1-7/index.html)
* [Redis for PCF](http://docs.pivotal.io/redis/index.html)
* [Spring Cloud Services for PCF](http://docs.pivotal.io/spring-cloud-services/index.html)

##<a id='prereqs'></a>Prerequisites##

You must have the following in order to use PCF on Microsoft Azure:

* A pay-as-you-go subscription on your Azure account.

* A Pivotal Network account: If you do not already have an account, [create one](https://network.pivotal.io/). Retrieve the API token for your profile by performing the following steps:
    1. Sign into the Pivotal Network.
    1. Navigate to your name in the top right and click **Edit Profile**.
    1. Record the API token located at the bottom of the page.

* An Azure command line tool on your machine.
     * For Linux/Unix/Mac OS X, follow these [instructions](https://azure.microsoft.com/en-us/documentation/articles/xplat-cli-install/) to install the Azure CLI.
     * For Windows, follow these [instructions](https://azure.microsoft.com/en-us/documentation/articles/powershell-install-configure/) to install the Azure PowerShell.
     * Use azure-sp-tool, follow these [instructions](https://github.com/danhigham/azure-sp-tool) to create service principal. The service principal is outputed to azure-credentials.json file.

* Sufficient resources for your Azure account. See the installation requirements at [Installing Pivotal Cloud Foundry on Azure](https://docs.pivotal.io/pivotalcf/1-8/customizing/azure.html#azure).

    For more information, see [Azure subscription and service limits, quotas, and constraints](https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/). To raise your quota, follow the instructions in <a href="#raising-quota">Raise Your Quota</a> below.
  <p class="note"><strong>Note</strong>: The cost per day for Azure resources varies, but it is likely in the $50 (US) range.</p>

###<a id="raising-quota"></a>Raise Your Quota###

* To request a core quota increase, follow these [instructions](https://blogs.msdn.microsoft.com/girishp/2015/09/20/increasing-core-quota-limits-in-azure/).

* When filling in the Details section of the Support Request Description, provide the following information to expedite your request,
replacing REGION with your region of choice:

<blockquote>"We are preparing to roll out Pivotal Cloud Foundry from the Azure Marketplace.<br>
We would like to raise our ARM (Azure Resource Manager) core limits.<br>
Requested quantity of ARM Cores: 200<br>
Requested region: REGION<br>
Please fulfill this request as soon as possible.<br>
The request is not temporary.<br>
This will not be a bursting request.<br>
Please allocate 1 TB of standard storage.<br>
VM Types to be used: F1s, F2s, F4s, DS11v2, DS12v2
VM count (Number of VMs with Cores ):<br>
27 F1s<br>
4 F2s<br>
4 F4s<br>
1 DS11v2<br>
1 DS12v2<br>
</blockquote>

##<a id='getting-started'></a>Install PCF on Microsoft Azure##

1. Log in to your Microsoft Azure [portal](https://portal.azure.com).
1. Select the Azure Marketplace tile.
1. Search for “Pivotal Cloud Foundry” and select **Pivotal Cloud Foundry on Microsoft Azure** or
navigate directly to the [Pivotal Cloud Foundry on Azure Marketplace](https://azure.microsoft.com/en-us/marketplace/partners/pivotal/pivotal-cloud-foundryazure-pcf/) page.
 <%= image_tag("azure/marketplace.png") %>
4. Click **Deploy >**.

5. Enter the following **User Inputs**:
    * **Storage Account Name Prefix**: Installing PCF on Microsoft Azure creates a new storage account. Use a unique prefix that contains lower-case letters and numbers and is no more
than 10 characters long. For more information, see [About Azure storage accounts](https://azure.microsoft.com/en-us/documentation/articles/storage-create-storage-account/).
    * **SSH public key**: You must generate 2048-bit RSA public and private key files.
    	* Linux/Unix/Mac OS X: From the command line, run `$ ssh-keygen -t rsa -b 2048`. Locate your public key in `~/.ssh/id_rsa.pub` and paste the contents into the parameter **sshKeyData**.
    	* Windows: Download, install, and use [PuTTYgen](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html).
Locate your public key file and paste the contents into the parameter **sshKeyData**.
    * **Service Principal**: Upload the `azure-credentials.json` file that you created from [Prerequisites](#prereqs) section.
    * **Pivotal Network Token**: Enter the API token of your Pivotal Network Account that you recorded in the [Prerequisites](#prereqs) section.
    * **Resource Group**: Use a new resource group with a unique name for each new deployment. For more information about Azure resource groups,
see [Manage Azure resources through portal](https://azure.microsoft.com/en-us/documentation/articles/resource-group-portal/).
    * **Location**: Choose which Azure location you want to deploy to. If you requested a quota increase, you must choose the same region that you submitted in your request.
1. Click **OK** and review the Summary Page.
7. Click **OK** and read the Terms of Use and Privacy Policy.
8. Click **Create** to be directed to the main Azure portal page, where a new tile shows the deployment is in progress.
<p class="note"><strong>Note</strong>: The tile deployment progress shows completed when the initial jumpbox VM is provisioned.
This does not indicate the deployment is complete.</p>

    The full deployment takes approximately 3-4 hours.

9. Check the **Outputs** section of the deployment template. Azure confirms your quota before deploying PCF.
If you see this message in the **Outputs** section of the deployment template `CRITICAL Insufficient Quota, PCF will NOT deploy`, you need to raise your quota.
See <a href="#raising-quota">Raise Your Quota</a>.

    <%= image_tag("azure/quota.png") %>

10. When the deployment is complete, the **Outputs** section of the deployment template will display the Ops Manager FQDN URL along with the Ops Manager login credentials and the Jumpbox FQDN URL.

##<a id='verify'></a>Verify the PCF on Microsoft Azure Installation ##

1. From your Azure Portal, navigate to **Resource Groups** and ensure the new **Resource Group** has been created.
	<%= image_tag("azure/resource_group.png") %>

2. Find the Ops Manager URL and the admin password:

  1. In the Azure Portal, return to the **Outputs** section of your deployment.
  2. Navigate to the Ops Manager URL.
  3. Log in with the provided credentials.

3. Log in to Apps Manager:
  1. Find the Apps Manager password by following [Logging in to Apps Manager](https://docs.pivotal.io/pivotalcf/1-8/customizing/console-login.html)
  2. Find the System Domain needed for the Apps Manager URL:
    1. Navigate to the Ops Manager Installation Dashboard
    2. Select **Elastic Runtime**
    3. Select **Domains**
    4. Copy the System Domain URL, referred to as SYSTEMDOMAINURL below
  3. Navigate to the URL `https://apps.SYSTEMDOMAINURL`
  4. Log in to Apps Manager with the username `admin` and the password obtained above.

5. From Apps Manager, verify that your services are running.
<%= image_tag("azure/console.png") %>

##<a id='delete'></a>Delete a Deployment of PCF on Microsoft Azure

To remove the deployment, navigate to your Azure Portal and delete the **Resource Group** associated with the deployment.

##<a id='troubleshooting'></a>Troubleshooting ##

* [Deployment fails](#deployfails)

###<a id='deployfails'></a>Deployment fails

**Symptom:** Deployment fails before the jumpbox VM is created. The **Resource Group** Events shows an event with a **Provisioning State: Failed**. The Status Message may show something like:

{
  "status": "Failed",
  "error": {
    "code": "ResourceDeploymentFailure",
    "message": "The resource operation completed with terminal provisioning state 'Failed'.",
    "details": [
      {
        "code": "VMExtensionProvisioningError",
        "message": "VM has reported a failure when processing extension 'initbootstrap'. Error message: \"Script returned an error.\n---stdout---\nDownload complete.\nCurrent working dir : /var/lib/waagent/Microsoft.OSTCExtensions.CustomScriptForLinux-1.4.1.0\nSys.Path: ['/usr/share/python-wheels/distlib-0.1.8-py2.py3-none-any.whl', '/usr/share/python-wheels/pip-1.5.4-py2.py3-none-any.whl', '/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl', '/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl', '/usr/share/python-wheels/setuptools-3.3-py2.py3-none-any.whl', '/usr/share/python-wheels/chardet-2.2.1-py2.py3-none-any.whl', '/usr/share/python-wheels/html5lib-0.999-py2.py3-none-any.whl', '/usr/share/python-wheels/six-1.5.2-py2.py3-none-any.whl', '/usr/share/python-wheels/colorama-0.2.5-py2.py3-none-any.whl', '/var/lib/waagent/Microsoft.OSTCExtensions.CustomScriptForLinux-1.4.1.0/download/0', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '']\n\n---errout---\n\rExtracting templates from packages: 61%\rExtracting templates from packages: 100%\nTraceback (most recent call last):\n  File \"bootstrap.py\", line 165, in <module>\n    check_quota(subscription_id, tenant, client_id, client_secret, location, numofcores)\n  File \"bootstrap.py\", line 62, in check_quota\n    token = get_token_from_client_credentials(endpoint,client_id,secret)\n  File \"bootstrap.py\", line 55, in get_token_from_client_credentials\n    result = urlopen(request)\n  File \"/usr/lib/python2.7/urllib2.py\", line 127, in urlopen\n    return _opener.open(url, data, timeout)\n  File \"/usr/lib/python2.7/urllib2.py\", line 410, in open\n    response = meth(req, response)\n  File \"/usr/lib/python2.7/urllib2.py\", line 523, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/usr/lib/python2.7/urllib2.py\", line 448, in error\n    return self._call_chain(*args)\n  File \"/usr/lib/python2.7/urllib2.py\", line 382, in _call_chain\n    result = func(*args)\n  File \"/usr/lib/python2.7/urllib2.py\", line 531, in http_error_default\n    raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nurllib2.HTTPError: HTTP Error 400: Bad Request\n\n\"."
      }
    ]
  }
}

**Solution:** If a HTTP 400 error is shown, the Client-ID or Tentant-ID is incorrect. If a HTTP 401 error is shown, the Client Secret is incorrect. Finally, if quota is insufficient, you will see such a message. There is no error code associated with this.

**Symptom:** Deployment fails after the jumpbox VM has been created

**Solution**: Capture the PCF deployment log as described in the [verification procedure above](#verify) and send it to azure-inquiry@pivotal.io with any additional information about the installation that you can provide.


 </pre>
